enum PoolType {
  STABLE_FACTORY
  CRYPTO_FACTORY
  METAPOOL_FACTORY
  REGISTRY_V1
  REGISTRY_V2
  LENDING
}

type Pool @entity {
  """ Entity ID """
  id: ID!
  """ Pool contract address """
  address: Bytes!
  """ Platform """
  platform: Platform!
  """ Pool name (from registry from LP token) """
  name: String!
  """ LP token symbol """
  symbol: String!
  """ Whether the pool is a metapool or a plain pool """
  metapool: Boolean!
  """ LP Token contract address """
  lpToken: Bytes!
  """ Base pool (for metapools) """
  basePool: Bytes!
  """ Pool coins """
  coins: [Bytes!]!
  """ Pool coins decimals (same order as coins) """
  coinDecimals: [BigInt!]!
  """ Pool coins names (same order as coins) """
  coinNames: [String!]!
  """ Pool asset type (USD: 0, ETH: 1, BTC: 2, Other: 3, Crypto: 4) """
  assetType: Int!
  """ Pool type (for ABI variations) """
  poolType: PoolType!
  """ Whether the pool uses int128 for coins (legacy contracts) """
  c128: Boolean!
  """ Whether the pool is a Curve v2 pool """
  isV2: Boolean!
  """ Whether one of the pool's assets is rebasing"""
  isRebasing: Boolean!

  """ Latest virtual price """
  virtualPrice: BigDecimal!
  """ Latest base APR (from trading fees) """
  baseApr: BigDecimal!

  """ Pool creation date """
  creationDate: BigInt!
  """ Pool creation transaction hash """
  creationTx: Bytes!
  """ Pool creation block """
  creationBlock: BigInt!

  """ Daily pool attribute snapshot """
  dailyPoolSnapshots: [DailyPoolSnapshot!] @derivedFrom(field: "pool")

  """ Pool OHLC candle data """
  candles: [Candle!] @derivedFrom(field: "pool")

  """ Pool swaps """
  swapEvents: [SwapEvent!] @derivedFrom(field: "pool")

  """ Pool liquidity events (currently disabled) """
  liquidityEvents: [LiquidityEvent!] @derivedFrom(field: "pool")

}

type DailyPoolSnapshot @entity {
  """ Entity ID """
  id: ID!
  """ Pool ID """
  pool: Pool!
  """ Pool virtual price """
  virtualPrice: BigDecimal!
  """ Pool fee value """
  fee: BigDecimal!
  """ Pool admin fee value """
  adminFee: BigDecimal!
  """ Off peg fee multiplier (for lending pools) """
  offPegFeeMultiplier: BigDecimal!
  """ Total reserves (asset and asset decimals denomination, same order as the pool's coins) """
  reserves: [BigInt!]!
  """ Total reserves (asset denomination, 18 decimals, same order as the pool's coins) """
  normalizedReserves: [BigInt!]!
  """ A factor """
  A: BigInt!
  """ xcpProfit value """
  xcpProfit: BigDecimal!
  """ xcpProfitA value """
  xcpProfitA: BigDecimal!
  """ LP Token Supply """
  lpTokenSupply: BigDecimal!
  """ Snapshot timestamp """
  timestamp: BigInt!
}


type SwapEvent @entity {
  id: ID!
  """ Pool ID """
  pool: Pool!
  """ Even block """
  block: BigInt!
  """ Event transaction hash """
  tx: Bytes!
  """ Transaction gas limit """
  gasLimit: BigInt!
  """ Transaction gas used """
  gasUsed: BigInt!
  """ Buyer address """
  buyer: Bytes!
  """ Sold token address """
  tokenSold: Bytes!
  """ Bought token address """
  tokenBought: Bytes!
  """ Amount sold """
  amountSold: BigDecimal!
  """ Amount bought """
  amountBought: BigDecimal!
  """ Was exchange underlying """
  isUnderlying: Boolean!
  """ Snapshot timestamp """
  timestamp: BigInt!
}

type Candle @entity {
  """ Entity ID (time + period + srcToken + dstToken) """
  id: ID!
  """ Pool ID """
  pool: Pool!
  """ Candle timestamp """
  timestamp: BigInt!
  """ Candle period: hourly (3600), daily (86400) or weekly (604800) """
  period: Int!
  """ Last block included in the candle """
  lastBlock: BigInt!
  """ First asset address """
  token0: Bytes!
  """ Second asset address """
  token1: Bytes!
  """ Number of transactions """
  txs: BigInt!

  """ First asset volume """
  token0TotalAmount: BigDecimal!
  """ Second asset volume """
  token1TotalAmount: BigDecimal!
  """ Open price """
  open: BigDecimal!
  """ Close price """
  close: BigDecimal!
  """ Lowest price """
  low: BigDecimal!
  """ Highest price """
  high: BigDecimal!
}

type LiquidityEvent @entity {
  """ Entity ID """
  id: ID!
  """ Address of the liquidity provider """
  liquidityProvider: Bytes!
  """ Event timestamp """
  timestamp: BigInt!
  """ Event block """
  block: BigInt!
  """ Tx hash"""
  tx: Bytes!
  """ Pool ID """
  pool: Pool!
  """ Amounts added or removed (same order as the pool's coins) """
  tokenAmounts: [BigInt!]!
  """ Whether the event is a liquidity removal or not """
  removal: Boolean!
  """ Supply of LP Tokens after the event """
  totalSupply: BigInt!
}


type TokenSnapshot @entity {
  """ Entity ID """
  id: ID!
  """ Token address """
  token: Bytes!
  """ Token price """
  price: BigDecimal!
  """ Snapshot timestamp """
  timestamp: BigInt!
}

type BasePool @entity {
  """ Entity ID """
  id: ID!
  """ Base pool coins """
  coins: [Bytes!]!
  """ Base pool coin decimals """
  coinDecimals: [BigInt!]!
}

type Platform @entity {
  """ Entity ID """
  id: ID!
  """ List of all pools """
  pools: [Pool!]! @derivedFrom(field: "platform")
  """ Addresses of all pools on the platform """
  poolAddresses: [Bytes!]!
  """ Timestamp of the latest snapshot """
  latestPoolSnapshot: BigInt!
}

type Registry @entity {
  """ Entity ID (Registry address) """
  id: ID!
}

type Factory @entity {
  """ Entity ID (Factory address) """
  id: ID!
  """ Number of pools deployed by the Factory contract """
  poolCount: BigInt!
}